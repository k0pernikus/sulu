<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin</parameter>
    <parameter key="kernel.environment">test</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">admin</parameter>
    <parameter key="kernel.cache_dir">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/cache/test</parameter>
    <parameter key="kernel.logs_dir">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/logs</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="JMSSerializerBundle">JMS\SerializerBundle\JMSSerializerBundle</parameter>
      <parameter key="FOSRestBundle">FOS\RestBundle\FOSRestBundle</parameter>
      <parameter key="SuluCoreBundle">Sulu\Bundle\CoreBundle\SuluCoreBundle</parameter>
      <parameter key="SuluContentBundle">Sulu\Bundle\ContentBundle\SuluContentBundle</parameter>
      <parameter key="SuluContactBundle">Sulu\Bundle\ContactBundle\SuluContactBundle</parameter>
      <parameter key="SuluSecurityBundle">Sulu\Bundle\SecurityBundle\SuluSecurityBundle</parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">adminTestDebugProjectContainer</parameter>
    <parameter key="sulu.test_user_provider.class">Sulu\Component\Testing\TestUserProvider</parameter>
    <parameter key="sulu.test_voter.class">Sulu\Component\Testing\TestVoter</parameter>
    <parameter key="sulu.content.template.default_path">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/../Datafixtures/Template</parameter>
    <parameter key="controller_resolver.class">Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver</parameter>
    <parameter key="controller_name_converter.class">Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser</parameter>
    <parameter key="response_listener.class">Symfony\Component\HttpKernel\EventListener\ResponseListener</parameter>
    <parameter key="streamed_response_listener.class">Symfony\Component\HttpKernel\EventListener\StreamedResponseListener</parameter>
    <parameter key="locale_listener.class">Symfony\Component\HttpKernel\EventListener\LocaleListener</parameter>
    <parameter key="event_dispatcher.class">Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher</parameter>
    <parameter key="http_kernel.class">Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel</parameter>
    <parameter key="filesystem.class">Symfony\Component\Filesystem\Filesystem</parameter>
    <parameter key="cache_warmer.class">Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate</parameter>
    <parameter key="cache_clearer.class">Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer</parameter>
    <parameter key="file_locator.class">Symfony\Component\HttpKernel\Config\FileLocator</parameter>
    <parameter key="uri_signer.class">Symfony\Component\HttpKernel\UriSigner</parameter>
    <parameter key="fragment.handler.class">Symfony\Component\HttpKernel\Fragment\FragmentHandler</parameter>
    <parameter key="fragment.renderer.inline.class">Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer</parameter>
    <parameter key="fragment.renderer.hinclude.class">Symfony\Bundle\FrameworkBundle\Fragment\ContainerAwareHIncludeFragmentRenderer</parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="translator.class">Symfony\Bundle\FrameworkBundle\Translation\Translator</parameter>
    <parameter key="translator.identity.class">Symfony\Component\Translation\IdentityTranslator</parameter>
    <parameter key="translator.selector.class">Symfony\Component\Translation\MessageSelector</parameter>
    <parameter key="translation.loader.php.class">Symfony\Component\Translation\Loader\PhpFileLoader</parameter>
    <parameter key="translation.loader.yml.class">Symfony\Component\Translation\Loader\YamlFileLoader</parameter>
    <parameter key="translation.loader.xliff.class">Symfony\Component\Translation\Loader\XliffFileLoader</parameter>
    <parameter key="translation.loader.po.class">Symfony\Component\Translation\Loader\PoFileLoader</parameter>
    <parameter key="translation.loader.mo.class">Symfony\Component\Translation\Loader\MoFileLoader</parameter>
    <parameter key="translation.loader.qt.class">Symfony\Component\Translation\Loader\QtFileLoader</parameter>
    <parameter key="translation.loader.csv.class">Symfony\Component\Translation\Loader\CsvFileLoader</parameter>
    <parameter key="translation.loader.res.class">Symfony\Component\Translation\Loader\IcuResFileLoader</parameter>
    <parameter key="translation.loader.dat.class">Symfony\Component\Translation\Loader\IcuDatFileLoader</parameter>
    <parameter key="translation.loader.ini.class">Symfony\Component\Translation\Loader\IniFileLoader</parameter>
    <parameter key="translation.dumper.php.class">Symfony\Component\Translation\Dumper\PhpFileDumper</parameter>
    <parameter key="translation.dumper.xliff.class">Symfony\Component\Translation\Dumper\XliffFileDumper</parameter>
    <parameter key="translation.dumper.po.class">Symfony\Component\Translation\Dumper\PoFileDumper</parameter>
    <parameter key="translation.dumper.mo.class">Symfony\Component\Translation\Dumper\MoFileDumper</parameter>
    <parameter key="translation.dumper.yml.class">Symfony\Component\Translation\Dumper\YamlFileDumper</parameter>
    <parameter key="translation.dumper.qt.class">Symfony\Component\Translation\Dumper\QtFileDumper</parameter>
    <parameter key="translation.dumper.csv.class">Symfony\Component\Translation\Dumper\CsvFileDumper</parameter>
    <parameter key="translation.dumper.ini.class">Symfony\Component\Translation\Dumper\IniFileDumper</parameter>
    <parameter key="translation.dumper.res.class">Symfony\Component\Translation\Dumper\IcuResFileDumper</parameter>
    <parameter key="translation.extractor.php.class">Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor</parameter>
    <parameter key="translation.loader.class">Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader</parameter>
    <parameter key="translation.extractor.class">Symfony\Component\Translation\Extractor\ChainExtractor</parameter>
    <parameter key="translation.writer.class">Symfony\Component\Translation\Writer\TranslationWriter</parameter>
    <parameter key="debug.errors_logger_listener.class">Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener</parameter>
    <parameter key="debug.event_dispatcher.class">Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher</parameter>
    <parameter key="debug.stopwatch.class">Symfony\Component\Stopwatch\Stopwatch</parameter>
    <parameter key="debug.container.dump">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/cache/test/adminTestDebugProjectContainer.xml</parameter>
    <parameter key="debug.controller_resolver.class">Symfony\Component\HttpKernel\Controller\TraceableControllerResolver</parameter>
    <parameter key="kernel.secret">secret</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.trusted_proxies" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="test.client.class">Symfony\Bundle\FrameworkBundle\Client</parameter>
    <parameter key="test.client.parameters" type="collection"/>
    <parameter key="test.client.history.class">Symfony\Component\BrowserKit\History</parameter>
    <parameter key="test.client.cookiejar.class">Symfony\Component\BrowserKit\CookieJar</parameter>
    <parameter key="test.session.listener.class">Symfony\Bundle\FrameworkBundle\EventListener\TestSessionListener</parameter>
    <parameter key="session.class">Symfony\Component\HttpFoundation\Session\Session</parameter>
    <parameter key="session.flashbag.class">Symfony\Component\HttpFoundation\Session\Flash\FlashBag</parameter>
    <parameter key="session.attribute_bag.class">Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag</parameter>
    <parameter key="session.storage.native.class">Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage</parameter>
    <parameter key="session.storage.php_bridge.class">Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage</parameter>
    <parameter key="session.storage.mock_file.class">Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage</parameter>
    <parameter key="session.handler.native_file.class">Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler</parameter>
    <parameter key="session_listener.class">Symfony\Bundle\FrameworkBundle\EventListener\SessionListener</parameter>
    <parameter key="session.storage.options" type="collection"/>
    <parameter key="session.save_path">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/cache/test/sessions</parameter>
    <parameter key="templating.engine.delegating.class">Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine</parameter>
    <parameter key="templating.name_parser.class">Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser</parameter>
    <parameter key="templating.filename_parser.class">Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser</parameter>
    <parameter key="templating.cache_warmer.template_paths.class">Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer</parameter>
    <parameter key="templating.locator.class">Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator</parameter>
    <parameter key="templating.loader.filesystem.class">Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader</parameter>
    <parameter key="templating.loader.cache.class">Symfony\Component\Templating\Loader\CacheLoader</parameter>
    <parameter key="templating.loader.chain.class">Symfony\Component\Templating\Loader\ChainLoader</parameter>
    <parameter key="templating.finder.class">Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder</parameter>
    <parameter key="templating.engine.php.class">Symfony\Bundle\FrameworkBundle\Templating\PhpEngine</parameter>
    <parameter key="templating.helper.slots.class">Symfony\Component\Templating\Helper\SlotsHelper</parameter>
    <parameter key="templating.helper.assets.class">Symfony\Component\Templating\Helper\CoreAssetsHelper</parameter>
    <parameter key="templating.helper.actions.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\ActionsHelper</parameter>
    <parameter key="templating.helper.router.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper</parameter>
    <parameter key="templating.helper.request.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\RequestHelper</parameter>
    <parameter key="templating.helper.session.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\SessionHelper</parameter>
    <parameter key="templating.helper.code.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\CodeHelper</parameter>
    <parameter key="templating.helper.translator.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\TranslatorHelper</parameter>
    <parameter key="templating.helper.form.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\FormHelper</parameter>
    <parameter key="templating.form.engine.class">Symfony\Component\Form\Extension\Templating\TemplatingRendererEngine</parameter>
    <parameter key="templating.form.renderer.class">Symfony\Component\Form\FormRenderer</parameter>
    <parameter key="templating.globals.class">Symfony\Bundle\FrameworkBundle\Templating\GlobalVariables</parameter>
    <parameter key="templating.asset.path_package.class">Symfony\Bundle\FrameworkBundle\Templating\Asset\PathPackage</parameter>
    <parameter key="templating.asset.url_package.class">Symfony\Component\Templating\Asset\UrlPackage</parameter>
    <parameter key="templating.asset.package_factory.class">Symfony\Bundle\FrameworkBundle\Templating\Asset\PackageFactory</parameter>
    <parameter key="templating.helper.code.file_link_format">null</parameter>
    <parameter key="templating.helper.form.resources" type="collection">
      <parameter>FrameworkBundle:Form</parameter>
    </parameter>
    <parameter key="templating.debugger.class">Symfony\Bundle\FrameworkBundle\Templating\Debugger</parameter>
    <parameter key="debug.templating.engine.php.class">Symfony\Bundle\FrameworkBundle\Templating\TimedPhpEngine</parameter>
    <parameter key="templating.loader.cache.path">null</parameter>
    <parameter key="templating.engines" type="collection">
      <parameter>twig</parameter>
    </parameter>
    <parameter key="data_collector.templates" type="collection"/>
    <parameter key="router.class">Symfony\Bundle\FrameworkBundle\Routing\Router</parameter>
    <parameter key="router.request_context.class">Symfony\Component\Routing\RequestContext</parameter>
    <parameter key="routing.loader.class">Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader</parameter>
    <parameter key="routing.resolver.class">Symfony\Component\Config\Loader\LoaderResolver</parameter>
    <parameter key="routing.loader.xml.class">Symfony\Component\Routing\Loader\XmlFileLoader</parameter>
    <parameter key="routing.loader.yml.class">Symfony\Component\Routing\Loader\YamlFileLoader</parameter>
    <parameter key="routing.loader.php.class">Symfony\Component\Routing\Loader\PhpFileLoader</parameter>
    <parameter key="router.options.generator_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</parameter>
    <parameter key="router.options.matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</parameter>
    <parameter key="router.cache_warmer.class">Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer</parameter>
    <parameter key="router.options.matcher.cache_class">adminTestUrlMatcher</parameter>
    <parameter key="router.options.generator.cache_class">adminTestUrlGenerator</parameter>
    <parameter key="router_listener.class">Symfony\Component\HttpKernel\EventListener\RouterListener</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/config/routing.yml</parameter>
    <parameter key="router.cache_class_prefix">adminTest</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="annotations.reader.class">Doctrine\Common\Annotations\AnnotationReader</parameter>
    <parameter key="annotations.cached_reader.class">Doctrine\Common\Annotations\CachedReader</parameter>
    <parameter key="annotations.file_cache_reader.class">Doctrine\Common\Annotations\FileCacheReader</parameter>
    <parameter key="twig.class">Twig_Environment</parameter>
    <parameter key="twig.loader.filesystem.class">Symfony\Bundle\TwigBundle\Loader\FilesystemLoader</parameter>
    <parameter key="twig.loader.chain.class">Twig_Loader_Chain</parameter>
    <parameter key="templating.engine.twig.class">Symfony\Bundle\TwigBundle\TwigEngine</parameter>
    <parameter key="twig.cache_warmer.class">Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer</parameter>
    <parameter key="twig.extension.trans.class">Symfony\Bridge\Twig\Extension\TranslationExtension</parameter>
    <parameter key="twig.extension.assets.class">Symfony\Bundle\TwigBundle\Extension\AssetsExtension</parameter>
    <parameter key="twig.extension.actions.class">Symfony\Bundle\TwigBundle\Extension\ActionsExtension</parameter>
    <parameter key="twig.extension.code.class">Symfony\Bridge\Twig\Extension\CodeExtension</parameter>
    <parameter key="twig.extension.routing.class">Symfony\Bridge\Twig\Extension\RoutingExtension</parameter>
    <parameter key="twig.extension.yaml.class">Symfony\Bridge\Twig\Extension\YamlExtension</parameter>
    <parameter key="twig.extension.form.class">Symfony\Bridge\Twig\Extension\FormExtension</parameter>
    <parameter key="twig.extension.httpkernel.class">Symfony\Bridge\Twig\Extension\HttpKernelExtension</parameter>
    <parameter key="twig.form.engine.class">Symfony\Bridge\Twig\Form\TwigRendererEngine</parameter>
    <parameter key="twig.form.renderer.class">Symfony\Bridge\Twig\Form\TwigRenderer</parameter>
    <parameter key="twig.translation.extractor.class">Symfony\Bridge\Twig\Translation\TwigExtractor</parameter>
    <parameter key="twig.exception_listener.class">Symfony\Component\HttpKernel\EventListener\ExceptionListener</parameter>
    <parameter key="twig.controller.exception.class">Symfony\Bundle\TwigBundle\Controller\ExceptionController</parameter>
    <parameter key="twig.exception_listener.controller">twig.controller.exception:showAction</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
    </parameter>
    <parameter key="debug.templating.engine.twig.class">Symfony\Bundle\TwigBundle\Debug\TimedTwigEngine</parameter>
    <parameter key="twig.options" type="collection">
      <parameter key="exception_controller">twig.controller.exception:showAction</parameter>
      <parameter key="autoescape_service">null</parameter>
      <parameter key="autoescape_service_method">null</parameter>
      <parameter key="cache">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/cache/test/twig</parameter>
      <parameter key="charset">UTF-8</parameter>
      <parameter key="debug">true</parameter>
      <parameter key="paths" type="collection"/>
    </parameter>
    <parameter key="monolog.logger.class">Symfony\Bridge\Monolog\Logger</parameter>
    <parameter key="monolog.gelf.publisher.class">Gelf\MessagePublisher</parameter>
    <parameter key="monolog.handler.stream.class">Monolog\Handler\StreamHandler</parameter>
    <parameter key="monolog.handler.group.class">Monolog\Handler\GroupHandler</parameter>
    <parameter key="monolog.handler.buffer.class">Monolog\Handler\BufferHandler</parameter>
    <parameter key="monolog.handler.rotating_file.class">Monolog\Handler\RotatingFileHandler</parameter>
    <parameter key="monolog.handler.syslog.class">Monolog\Handler\SyslogHandler</parameter>
    <parameter key="monolog.handler.null.class">Monolog\Handler\NullHandler</parameter>
    <parameter key="monolog.handler.test.class">Monolog\Handler\TestHandler</parameter>
    <parameter key="monolog.handler.gelf.class">Monolog\Handler\GelfHandler</parameter>
    <parameter key="monolog.handler.firephp.class">Symfony\Bridge\Monolog\Handler\FirePHPHandler</parameter>
    <parameter key="monolog.handler.chromephp.class">Symfony\Bridge\Monolog\Handler\ChromePhpHandler</parameter>
    <parameter key="monolog.handler.debug.class">Symfony\Bridge\Monolog\Handler\DebugHandler</parameter>
    <parameter key="monolog.handler.swift_mailer.class">Monolog\Handler\SwiftMailerHandler</parameter>
    <parameter key="monolog.handler.native_mailer.class">Monolog\Handler\NativeMailerHandler</parameter>
    <parameter key="monolog.handler.socket.class">Monolog\Handler\SocketHandler</parameter>
    <parameter key="monolog.handler.pushover.class">Monolog\Handler\PushoverHandler</parameter>
    <parameter key="monolog.handler.raven.class">Monolog\Handler\RavenHandler</parameter>
    <parameter key="monolog.handler.fingers_crossed.class">Monolog\Handler\FingersCrossedHandler</parameter>
    <parameter key="monolog.handler.fingers_crossed.error_level_activation_strategy.class">Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy</parameter>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.main">null</parameter>
    </parameter>
    <parameter key="security.context.class">Symfony\Component\Security\Core\SecurityContext</parameter>
    <parameter key="security.user_checker.class">Symfony\Component\Security\Core\User\UserChecker</parameter>
    <parameter key="security.encoder_factory.generic.class">Symfony\Component\Security\Core\Encoder\EncoderFactory</parameter>
    <parameter key="security.encoder.digest.class">Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder</parameter>
    <parameter key="security.encoder.plain.class">Symfony\Component\Security\Core\Encoder\PlaintextPasswordEncoder</parameter>
    <parameter key="security.encoder.pbkdf2.class">Symfony\Component\Security\Core\Encoder\Pbkdf2PasswordEncoder</parameter>
    <parameter key="security.encoder.bcrypt.class">Symfony\Component\Security\Core\Encoder\BCryptPasswordEncoder</parameter>
    <parameter key="security.user.provider.in_memory.class">Symfony\Component\Security\Core\User\InMemoryUserProvider</parameter>
    <parameter key="security.user.provider.in_memory.user.class">Symfony\Component\Security\Core\User\User</parameter>
    <parameter key="security.user.provider.chain.class">Symfony\Component\Security\Core\User\ChainUserProvider</parameter>
    <parameter key="security.authentication.trust_resolver.class">Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver</parameter>
    <parameter key="security.authentication.trust_resolver.anonymous_class">Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</parameter>
    <parameter key="security.authentication.trust_resolver.rememberme_class">Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</parameter>
    <parameter key="security.authentication.manager.class">Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager</parameter>
    <parameter key="security.authentication.session_strategy.class">Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy</parameter>
    <parameter key="security.access.decision_manager.class">Symfony\Component\Security\Core\Authorization\AccessDecisionManager</parameter>
    <parameter key="security.access.simple_role_voter.class">Symfony\Component\Security\Core\Authorization\Voter\RoleVoter</parameter>
    <parameter key="security.access.authenticated_voter.class">Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter</parameter>
    <parameter key="security.access.role_hierarchy_voter.class">Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter</parameter>
    <parameter key="security.firewall.class">Symfony\Component\Security\Http\Firewall</parameter>
    <parameter key="security.firewall.map.class">Symfony\Bundle\SecurityBundle\Security\FirewallMap</parameter>
    <parameter key="security.firewall.context.class">Symfony\Bundle\SecurityBundle\Security\FirewallContext</parameter>
    <parameter key="security.matcher.class">Symfony\Component\HttpFoundation\RequestMatcher</parameter>
    <parameter key="security.role_hierarchy.class">Symfony\Component\Security\Core\Role\RoleHierarchy</parameter>
    <parameter key="security.http_utils.class">Symfony\Component\Security\Http\HttpUtils</parameter>
    <parameter key="security.validator.user_password.class">Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator</parameter>
    <parameter key="security.authentication.retry_entry_point.class">Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint</parameter>
    <parameter key="security.channel_listener.class">Symfony\Component\Security\Http\Firewall\ChannelListener</parameter>
    <parameter key="security.authentication.form_entry_point.class">Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint</parameter>
    <parameter key="security.authentication.listener.form.class">Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener</parameter>
    <parameter key="security.authentication.listener.basic.class">Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener</parameter>
    <parameter key="security.authentication.basic_entry_point.class">Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint</parameter>
    <parameter key="security.authentication.listener.digest.class">Symfony\Component\Security\Http\Firewall\DigestAuthenticationListener</parameter>
    <parameter key="security.authentication.digest_entry_point.class">Symfony\Component\Security\Http\EntryPoint\DigestAuthenticationEntryPoint</parameter>
    <parameter key="security.authentication.listener.x509.class">Symfony\Component\Security\Http\Firewall\X509AuthenticationListener</parameter>
    <parameter key="security.authentication.listener.anonymous.class">Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener</parameter>
    <parameter key="security.authentication.switchuser_listener.class">Symfony\Component\Security\Http\Firewall\SwitchUserListener</parameter>
    <parameter key="security.logout_listener.class">Symfony\Component\Security\Http\Firewall\LogoutListener</parameter>
    <parameter key="security.logout.handler.session.class">Symfony\Component\Security\Http\Logout\SessionLogoutHandler</parameter>
    <parameter key="security.logout.handler.cookie_clearing.class">Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler</parameter>
    <parameter key="security.logout.success_handler.class">Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler</parameter>
    <parameter key="security.access_listener.class">Symfony\Component\Security\Http\Firewall\AccessListener</parameter>
    <parameter key="security.access_map.class">Symfony\Component\Security\Http\AccessMap</parameter>
    <parameter key="security.exception_listener.class">Symfony\Component\Security\Http\Firewall\ExceptionListener</parameter>
    <parameter key="security.context_listener.class">Symfony\Component\Security\Http\Firewall\ContextListener</parameter>
    <parameter key="security.authentication.provider.dao.class">Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider</parameter>
    <parameter key="security.authentication.provider.pre_authenticated.class">Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider</parameter>
    <parameter key="security.authentication.provider.anonymous.class">Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider</parameter>
    <parameter key="security.authentication.success_handler.class">Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler</parameter>
    <parameter key="security.authentication.failure_handler.class">Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler</parameter>
    <parameter key="security.authentication.provider.rememberme.class">Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider</parameter>
    <parameter key="security.authentication.listener.rememberme.class">Symfony\Component\Security\Http\Firewall\RememberMeListener</parameter>
    <parameter key="security.rememberme.token.provider.in_memory.class">Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider</parameter>
    <parameter key="security.authentication.rememberme.services.persistent.class">Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices</parameter>
    <parameter key="security.authentication.rememberme.services.simplehash.class">Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices</parameter>
    <parameter key="security.rememberme.response_listener.class">Symfony\Component\Security\Http\RememberMe\ResponseListener</parameter>
    <parameter key="templating.helper.logout_url.class">Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper</parameter>
    <parameter key="templating.helper.security.class">Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper</parameter>
    <parameter key="twig.extension.logout_url.class">Symfony\Bundle\SecurityBundle\Twig\Extension\LogoutUrlExtension</parameter>
    <parameter key="twig.extension.security.class">Symfony\Bridge\Twig\Extension\SecurityExtension</parameter>
    <parameter key="data_collector.security.class">Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector</parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection"/>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection"/>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\ORM\Mapping\Driver\DriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/cache/test/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="jms_serializer.metadata.file_locator.class">Metadata\Driver\FileLocator</parameter>
    <parameter key="jms_serializer.metadata.annotation_driver.class">JMS\Serializer\Metadata\Driver\AnnotationDriver</parameter>
    <parameter key="jms_serializer.metadata.chain_driver.class">Metadata\Driver\DriverChain</parameter>
    <parameter key="jms_serializer.metadata.yaml_driver.class">JMS\Serializer\Metadata\Driver\YamlDriver</parameter>
    <parameter key="jms_serializer.metadata.xml_driver.class">JMS\Serializer\Metadata\Driver\XmlDriver</parameter>
    <parameter key="jms_serializer.metadata.php_driver.class">JMS\Serializer\Metadata\Driver\PhpDriver</parameter>
    <parameter key="jms_serializer.metadata.doctrine_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrineTypeDriver</parameter>
    <parameter key="jms_serializer.metadata.lazy_loading_driver.class">Metadata\Driver\LazyLoadingDriver</parameter>
    <parameter key="jms_serializer.metadata.metadata_factory.class">Metadata\MetadataFactory</parameter>
    <parameter key="jms_serializer.metadata.cache.file_cache.class">Metadata\Cache\FileCache</parameter>
    <parameter key="jms_serializer.event_dispatcher.class">JMS\Serializer\EventDispatcher\LazyEventDispatcher</parameter>
    <parameter key="jms_serializer.camel_case_naming_strategy.class">JMS\Serializer\Naming\CamelCaseNamingStrategy</parameter>
    <parameter key="jms_serializer.serialized_name_annotation_strategy.class">JMS\Serializer\Naming\SerializedNameAnnotationStrategy</parameter>
    <parameter key="jms_serializer.cache_naming_strategy.class">JMS\Serializer\Naming\CacheNamingStrategy</parameter>
    <parameter key="jms_serializer.doctrine_object_constructor.class">JMS\Serializer\Construction\DoctrineObjectConstructor</parameter>
    <parameter key="jms_serializer.unserialize_object_constructor.class">JMS\Serializer\Construction\UnserializeObjectConstructor</parameter>
    <parameter key="jms_serializer.version_exclusion_strategy.class">JMS\Serializer\Exclusion\VersionExclusionStrategy</parameter>
    <parameter key="jms_serializer.serializer.class">JMS\Serializer\Serializer</parameter>
    <parameter key="jms_serializer.twig_extension.class">JMS\Serializer\Twig\SerializerExtension</parameter>
    <parameter key="jms_serializer.templating.helper.class">JMS\SerializerBundle\Templating\SerializerHelper</parameter>
    <parameter key="jms_serializer.json_serialization_visitor.class">JMS\Serializer\JsonSerializationVisitor</parameter>
    <parameter key="jms_serializer.json_serialization_visitor.options">0</parameter>
    <parameter key="jms_serializer.json_deserialization_visitor.class">JMS\Serializer\JsonDeserializationVisitor</parameter>
    <parameter key="jms_serializer.xml_serialization_visitor.class">JMS\Serializer\XmlSerializationVisitor</parameter>
    <parameter key="jms_serializer.xml_deserialization_visitor.class">JMS\Serializer\XmlDeserializationVisitor</parameter>
    <parameter key="jms_serializer.xml_deserialization_visitor.doctype_whitelist" type="collection"/>
    <parameter key="jms_serializer.yaml_serialization_visitor.class">JMS\Serializer\YamlSerializationVisitor</parameter>
    <parameter key="jms_serializer.handler_registry.class">JMS\Serializer\Handler\LazyHandlerRegistry</parameter>
    <parameter key="jms_serializer.datetime_handler.class">JMS\Serializer\Handler\DateHandler</parameter>
    <parameter key="jms_serializer.array_collection_handler.class">JMS\Serializer\Handler\ArrayCollectionHandler</parameter>
    <parameter key="jms_serializer.php_collection_handler.class">JMS\Serializer\Handler\PhpCollectionHandler</parameter>
    <parameter key="jms_serializer.form_error_handler.class">JMS\Serializer\Handler\FormErrorHandler</parameter>
    <parameter key="jms_serializer.constraint_violation_handler.class">JMS\Serializer\Handler\ConstraintViolationHandler</parameter>
    <parameter key="jms_serializer.doctrine_proxy_subscriber.class">JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber</parameter>
    <parameter key="jms_serializer.stopwatch_subscriber.class">JMS\SerializerBundle\Serializer\StopwatchEventSubscriber</parameter>
    <parameter key="fos_rest.serializer.exclusion_strategy.version"></parameter>
    <parameter key="fos_rest.serializer.exclusion_strategy.groups"></parameter>
    <parameter key="fos_rest.view_handler.jsonp.callback_param"></parameter>
    <parameter key="fos_rest.view_handler.jsonp.callback_filter"></parameter>
    <parameter key="fos_rest.view.exception_wrapper_handler">FOS\RestBundle\View\ExceptionWrapperHandler</parameter>
    <parameter key="fos_rest.routing.loader.controller.class">FOS\RestBundle\Routing\Loader\RestRouteLoader</parameter>
    <parameter key="fos_rest.routing.loader.yaml_collection.class">FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader</parameter>
    <parameter key="fos_rest.routing.loader.xml_collection.class">FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader</parameter>
    <parameter key="fos_rest.routing.loader.processor.class">FOS\RestBundle\Routing\Loader\RestRouteProcessor</parameter>
    <parameter key="fos_rest.routing.loader.reader.controller.class">FOS\RestBundle\Routing\Loader\Reader\RestControllerReader</parameter>
    <parameter key="fos_rest.routing.loader.reader.action.class">FOS\RestBundle\Routing\Loader\Reader\RestActionReader</parameter>
    <parameter key="fos_rest.format_negotiator.class">FOS\RestBundle\Util\FormatNegotiator</parameter>
    <parameter key="fos_rest.inflector.class">FOS\RestBundle\Util\Inflector\DoctrineInflector</parameter>
    <parameter key="fos_rest.request.param_fetcher.class">FOS\RestBundle\Request\ParamFetcher</parameter>
    <parameter key="fos_rest.request.param_fetcher.reader.class">FOS\RestBundle\Request\ParamReader</parameter>
    <parameter key="fos_rest.cache_dir">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/cache/test/fos_rest</parameter>
    <parameter key="fos_rest.serializer.serialize_null">false</parameter>
    <parameter key="fos_rest.formats" type="collection">
      <parameter key="json">false</parameter>
      <parameter key="xml">false</parameter>
      <parameter key="html">true</parameter>
    </parameter>
    <parameter key="fos_rest.default_engine">twig</parameter>
    <parameter key="fos_rest.force_redirects" type="collection">
      <parameter key="html">302</parameter>
    </parameter>
    <parameter key="fos_rest.failed_validation">400</parameter>
    <parameter key="fos_rest.empty_content">204</parameter>
    <parameter key="fos_rest.serialize_null">false</parameter>
    <parameter key="fos_rest.routing.loader.default_format">json</parameter>
    <parameter key="fos_rest.routing.loader.include_format">true</parameter>
    <parameter key="fos_rest.exception.codes" type="collection"/>
    <parameter key="fos_rest.exception.messages" type="collection"/>
    <parameter key="fos_rest.decoders" type="collection">
      <parameter key="json">fos_rest.decoder.json</parameter>
      <parameter key="xml">fos_rest.decoder.xml</parameter>
    </parameter>
    <parameter key="fos_rest.mime_types" type="collection"/>
    <parameter key="fos_rest.converter.request_body.validation_errors_argument">validationErrors</parameter>
    <parameter key="sulu.phpcr.factory_class">Jackalope\RepositoryFactoryJackrabbit</parameter>
    <parameter key="sulu.phpcr.url">http://localhost:8080/server</parameter>
    <parameter key="sulu.phpcr.username">admin</parameter>
    <parameter key="sulu.phpcr.password">admin</parameter>
    <parameter key="sulu.phpcr.workspace">default</parameter>
    <parameter key="sulu.content.base_path.content">/cmf/contents</parameter>
    <parameter key="sulu.content.base_path.route">/cmf/routes</parameter>
    <parameter key="sulu.content.type.text_line.template">SuluContentBundle:Template:content-types/text_line.html.twig</parameter>
    <parameter key="sulu.content.type.text_area.template">SuluContentBundle:Template:content-types/text_area.html.twig</parameter>
    <parameter key="sulu.content.type.resource_locator.template">SuluContentBundle:Template:content-types/resource_locator.html.twig</parameter>
    <parameter key="sulu.content.mapper.class">Sulu\Component\Content\Mapper\ContentMapper</parameter>
    <parameter key="sulu.content.structure_manager.class">Sulu\Component\Content\StructureManager</parameter>
    <parameter key="sulu.content.structure_manager.loader.class">Sulu\Component\Content\Template\TemplateReader</parameter>
    <parameter key="sulu.content.type.text_line.class">Sulu\Component\Content\Types\TextLine</parameter>
    <parameter key="sulu.content.type.text_area.class">Sulu\Component\Content\Types\TextArea</parameter>
    <parameter key="sulu.content.type.resource_locator.class">Sulu\Component\Content\Types\ResourceLocator</parameter>
    <parameter key="sulu.content.rlp.mapper.phpcr.class">Sulu\Component\Content\Types\Rlp\Mapper\PhpcrMapper</parameter>
    <parameter key="sulu.content.rlp.strategy.tree.class">Sulu\Component\Content\Types\Rlp\Strategy\TreeStrategy</parameter>
    <parameter key="sulu_core.portal.portal_manager.class">Sulu\Component\Portal\PortalManager</parameter>
    <parameter key="sulu_core.portal.loader.xml_class">Sulu\Component\Portal\Loader\XmlFileLoader</parameter>
    <parameter key="sulu_core.portal.portal_listener.class">Sulu\Bundle\CoreBundle\EventListener\PortalListener</parameter>
    <parameter key="sulu_core.portal.config_dir">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/../Resources/portals</parameter>
    <parameter key="sulu_core.portal.cache_class">PortalCollectionCache</parameter>
    <parameter key="sulu_core.portal.base_class">PortalCollection</parameter>
    <parameter key="sulu.phpcr.session.class">Sulu\Component\PHPCR\SessionFactory\SessionFactoryService</parameter>
    <parameter key="sulu_core.list_rest_helper.class">Sulu\Component\Rest\Listing\ListRestHelper</parameter>
    <parameter key="sulu_content.admin.class">Sulu\Bundle\ContentBundle\Admin\SuluContentAdmin</parameter>
    <parameter key="sulu_content.twig_extension.class">Sulu\Bundle\ContentBundle\Twig\ContentExtension</parameter>
    <parameter key="sulu_content.admin.content_navigation.class">Sulu\Bundle\ContentBundle\Admin\SuluContentContentNavigation</parameter>
    <parameter key="sulu_contact.admin.class">Sulu\Bundle\ContactBundle\Admin\SuluContactAdmin</parameter>
    <parameter key="sulu_contact.admin.content_navigation.class">Sulu\Bundle\ContactBundle\Admin\SuluContactContentNavigation</parameter>
    <parameter key="sulu_contact.defaults" type="collection">
      <parameter key="phoneType">1</parameter>
      <parameter key="emailType">1</parameter>
      <parameter key="addressType">1</parameter>
      <parameter key="urlType">1</parameter>
      <parameter key="country">1</parameter>
    </parameter>
    <parameter key="permissions" type="collection">
      <parameter key="view">64</parameter>
      <parameter key="add">32</parameter>
      <parameter key="edit">16</parameter>
      <parameter key="delete">8</parameter>
      <parameter key="archive">4</parameter>
      <parameter key="live">2</parameter>
      <parameter key="security">1</parameter>
    </parameter>
    <parameter key="sulu_security.admin.class">Sulu\Bundle\SecurityBundle\Admin\SuluSecurityAdmin</parameter>
    <parameter key="sulu_security.mask_converter.class">Sulu\Bundle\SecurityBundle\Permission\MaskConverter</parameter>
    <parameter key="sulu_security.salt_generator.class">Sulu\Bundle\SecurityBundle\Permission\SaltGenerator</parameter>
    <parameter key="sulu_security.admin.content_navigation.class">Sulu\Bundle\SecurityBundle\Admin\SuluSecurityContentNavigation</parameter>
    <parameter key="sulu_security.admin.roles_navigation.class">Sulu\Bundle\SecurityBundle\Admin\SuluSecurityRolesContentNavigation</parameter>
    <parameter key="sulu_security.permission_voter.class">Sulu\Bundle\SecurityBundle\Permission\PermissionVoter</parameter>
    <parameter key="sulu_security.services.user_data_handler.class">Sulu\Bundle\SecurityBundle\Services\UserDataHandler</parameter>
  </parameters>
  <services>
    <service id="test_user_provider" class="Sulu\Component\Testing\TestUserProvider"/>
    <service id="controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <argument>en</argument>
      <argument type="service" id="router" on-invalid="ignore"/>
      <call method="setRequest">
        <argument type="service" id="request" on-invalid="null" strict="false"/>
      </call>
    </service>
    <service id="event_dispatcher" class="Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher">
      <argument type="service" id="service_container"/>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>fos_rest.body_listener</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>sulu_core.portal.portal_listener</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>300</argument>
      </call>
      <call method="addSubscriberService">
        <argument>response_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>streamed_response_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\StreamedResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>locale_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\LocaleListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>debug.emergency_logger_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>debug.deprecation_logger_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>test.session.listener</argument>
        <argument>Symfony\Bundle\FrameworkBundle\EventListener\TestSessionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>session_listener</argument>
        <argument>Symfony\Bundle\FrameworkBundle\EventListener\SessionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>router_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\RouterListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>twig.exception_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ExceptionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>security.firewall</argument>
        <argument>Symfony\Component\Security\Http\Firewall</argument>
      </call>
      <call method="addSubscriberService">
        <argument>security.rememberme.response_listener</argument>
        <argument>Symfony\Component\Security\Http\RememberMe\ResponseListener</argument>
      </call>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="debug.controller_resolver"/>
    </service>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer" public="false">
            <tag name="kernel.cache_warmer" priority="20"/>
            <argument type="service">
              <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
                <argument type="service" id="kernel"/>
                <argument type="service" id="templating.filename_parser"/>
                <argument>/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/Resources</argument>
              </service>
            </argument>
            <argument type="service" id="templating.locator"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="router"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="service_container"/>
            <argument type="service">
              <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
                <argument type="service" id="kernel"/>
                <argument type="service" id="templating.filename_parser"/>
                <argument>/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/Resources</argument>
              </service>
            </argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="doctrine"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer">
      <argument type="collection"/>
    </service>
    <service id="request" scope="request" synthetic="true" synchronized="true"/>
    <service id="service_container" synthetic="true"/>
    <service id="kernel" synthetic="true"/>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
      <argument>/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/Resources</argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>secret</argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\Fragment\FragmentHandler">
      <argument type="collection"/>
      <argument>true</argument>
      <call method="setRequest">
        <argument type="service" id="request" on-invalid="null" strict="false"/>
      </call>
      <call method="addRenderer">
        <argument type="service" id="fragment.renderer.inline"/>
      </call>
      <call method="addRenderer">
        <argument type="service" id="fragment.renderer.hinclude"/>
      </call>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.hinclude" class="Symfony\Bundle\FrameworkBundle\Fragment\ContainerAwareHIncludeFragmentRenderer">
      <tag name="kernel.fragment_renderer"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="uri_signer"/>
      <argument>null</argument>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <argument type="service" id="service_container"/>
      <argument type="service" id="translator.selector"/>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/cache/test/translations</argument>
        <argument key="debug">true</argument>
      </argument>
    </service>
    <service id="translator" class="Symfony\Component\Translation\IdentityTranslator">
      <argument type="service" id="translator.selector"/>
    </service>
    <service id="translator.selector" class="Symfony\Component\Translation\MessageSelector" public="false"/>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.loader" class="Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="debug.emergency_logger_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="emergency"/>
      <argument>emergency</argument>
      <argument type="service" id="monolog.logger.emergency" on-invalid="null"/>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch"/>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="monolog.logger" channel="event"/>
      <argument type="service" id="event_dispatcher"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <call method="setProfiler">
        <argument>null</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <argument type="service">
        <service class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
          <tag name="monolog.logger" channel="request"/>
          <argument type="service" id="service_container"/>
          <argument type="service" id="controller_name_converter"/>
          <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.deprecation_logger_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="deprecation"/>
      <argument>deprecation</argument>
      <argument type="service" id="monolog.logger.deprecation" on-invalid="null"/>
    </service>
    <service id="test.client" class="Symfony\Bundle\FrameworkBundle\Client" scope="prototype">
      <argument type="service" id="kernel"/>
      <argument type="collection"/>
      <argument type="service">
        <service class="Symfony\Component\BrowserKit\History" scope="prototype"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\BrowserKit\CookieJar" scope="prototype"/>
      </argument>
    </service>
    <service id="test.client.history" class="Symfony\Component\BrowserKit\History" scope="prototype"/>
    <service id="test.client.cookiejar" class="Symfony\Component\BrowserKit\CookieJar" scope="prototype"/>
    <service id="test.session.listener" class="Symfony\Bundle\FrameworkBundle\EventListener\TestSessionListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session">
      <argument type="service" id="session.storage.filesystem"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
      </argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage">
      <argument type="collection"/>
      <argument type="service" id="session.handler"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage">
      <argument type="service" id="session.handler"/>
    </service>
    <service id="session_listener" class="Symfony\Bundle\FrameworkBundle\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="templating.name_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="templating.filename_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser"/>
    <service id="templating.locator" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator" public="false">
      <argument type="service" id="file_locator"/>
      <argument>/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/cache/test</argument>
    </service>
    <service id="templating.helper.slots" class="Symfony\Component\Templating\Helper\SlotsHelper">
      <tag name="templating.helper" alias="slots"/>
    </service>
    <service id="templating.helper.assets" class="Symfony\Component\Templating\Helper\CoreAssetsHelper" scope="request">
      <tag name="templating.helper" alias="assets"/>
      <argument type="service">
        <service class="Symfony\Bundle\FrameworkBundle\Templating\Asset\PathPackage" scope="request" public="false">
          <argument type="service" id="request"/>
          <argument>null</argument>
          <argument>%%s?%%s</argument>
        </service>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="templating.asset.package_factory" class="Symfony\Bundle\FrameworkBundle\Templating\Asset\PackageFactory">
      <argument type="service" id="service_container"/>
    </service>
    <service id="templating.helper.request" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\RequestHelper">
      <tag name="templating.helper" alias="request"/>
      <argument type="service" id="request" strict="false"/>
    </service>
    <service id="templating.helper.session" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\SessionHelper">
      <tag name="templating.helper" alias="session"/>
      <argument type="service" id="request" strict="false"/>
    </service>
    <service id="templating.helper.router" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper">
      <tag name="templating.helper" alias="router"/>
      <argument type="service" id="router"/>
    </service>
    <service id="templating.helper.actions" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\ActionsHelper">
      <tag name="templating.helper" alias="actions"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="templating.helper.code" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\CodeHelper">
      <tag name="templating.helper" alias="code"/>
      <argument>null</argument>
      <argument>/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="templating.helper.translator" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\TranslatorHelper">
      <tag name="templating.helper" alias="translator"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="templating.helper.form" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\FormHelper">
      <tag name="templating.helper" alias="form"/>
      <argument type="service">
        <service class="Symfony\Component\Form\FormRenderer" public="false">
          <argument type="service">
            <service class="Symfony\Component\Form\Extension\Templating\TemplatingRendererEngine" public="false">
              <argument type="service" id="debug.templating.engine.php"/>
              <argument type="collection">
                <argument>FrameworkBundle:Form</argument>
              </argument>
            </service>
          </argument>
          <argument>null</argument>
        </service>
      </argument>
    </service>
    <service id="templating.globals" class="Symfony\Bundle\FrameworkBundle\Templating\GlobalVariables">
      <argument type="service" id="service_container"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader">
      <tag name="monolog.logger" channel="router"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="monolog.logger.router" on-invalid="null"/>
      <argument type="service">
        <service class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service" id="fos_rest.routing.loader.controller"/>
          </call>
          <call method="addLoader">
            <argument type="service" id="fos_rest.routing.loader.yaml_collection"/>
          </call>
          <call method="addLoader">
            <argument type="service" id="fos_rest.routing.loader.xml_collection"/>
          </call>
        </service>
      </argument>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="router"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <call method="setRequest">
        <argument type="service" id="request" on-invalid="null" strict="false"/>
      </call>
    </service>
    <service id="twig" class="Twig_Environment">
      <argument type="service" id="twig.loader"/>
      <argument type="collection">
        <argument key="exception_controller">twig.controller.exception:showAction</argument>
        <argument key="autoescape_service">null</argument>
        <argument key="autoescape_service_method">null</argument>
        <argument key="cache">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/cache/test/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="debug">true</argument>
        <argument key="paths" type="collection"/>
      </argument>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="translator"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\Extension\AssetsExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\Extension\ActionsExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
            <tag name="twig.extension"/>
            <argument>null</argument>
            <argument>/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin</argument>
            <argument>UTF-8</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="router"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="fragment.handler"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Twig_Extension_Debug" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\SecurityBundle\Twig\Extension\LogoutUrlExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="templating.helper.logout_url"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="security.context" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="JMS\Serializer\Twig\SerializerExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="jms_serializer"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sulu_content.twig_extension"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="templating.globals"/>
      </call>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.exception_listener" class="Symfony\Component\HttpKernel\EventListener\ExceptionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>twig.controller.exception:showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController">
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="monolog.handler.main" class="Monolog\Handler\FingersCrossedHandler">
      <argument type="service" id="monolog.handler.nested"/>
      <argument>400</argument>
      <argument>0</argument>
      <argument>true</argument>
      <argument>true</argument>
    </service>
    <service id="monolog.handler.nested" class="Monolog\Handler\StreamHandler">
      <argument>/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/logs/test.log</argument>
      <argument>100</argument>
      <argument>true</argument>
    </service>
    <service id="security.context" class="Symfony\Component\Security\Core\SecurityContext">
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
            <argument type="service" id="test_user_provider"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Core\User\UserChecker" public="false"/>
            </argument>
            <argument>test</argument>
            <argument type="service" id="security.encoder_factory"/>
            <argument>true</argument>
          </service>
        </argument>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false">
      <argument>Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</argument>
      <argument>Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</argument>
    </service>
    <service id="security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
      <argument type="collection">
        <argument type="service">
          <service class="Sulu\Component\Testing\TestVoter" public="false">
            <tag name="security.voter"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Sulu\Bundle\SecurityBundle\Permission\PermissionVoter" public="false">
            <tag name="security.voter"/>
            <argument type="collection">
              <argument key="view">64</argument>
              <argument key="add">32</argument>
              <argument key="edit">16</argument>
              <argument key="delete">8</argument>
              <argument key="archive">4</argument>
              <argument key="live">2</argument>
              <argument key="security">1</argument>
            </argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter" public="false">
            <tag name="security.voter" priority="245"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
                <argument type="collection"/>
              </service>
            </argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
            <tag name="security.voter" priority="250"/>
            <argument type="service" id="security.authentication.trust_resolver"/>
          </service>
        </argument>
      </argument>
      <argument>affirmative</argument>
      <argument>false</argument>
      <argument>true</argument>
    </service>
    <service id="security.firewall" class="Symfony\Component\Security\Http\Firewall">
      <tag name="kernel.event_subscriber"/>
      <argument type="service">
        <service class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
          <argument type="service" id="service_container"/>
          <argument type="collection">
            <argument key="security.firewall.map.context.test">null</argument>
          </argument>
        </service>
      </argument>
      <argument type="service" id="event_dispatcher"/>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.context"/>
      <argument type="service" id="security.encoder_factory"/>
    </service>
    <service id="security.secure_random" class="Symfony\Component\Security\Core\Util\SecureRandom">
      <tag name="monolog.logger" channel="security"/>
      <argument>/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/cache/test/secure_random.seed</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="ignore"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="templating.helper.logout_url" class="Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper">
      <tag name="templating.helper" alias="logout_url"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="router"/>
    </service>
    <service id="templating.helper.security" class="Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper">
      <tag name="templating.helper" alias="security"/>
      <argument type="service" id="security.context" on-invalid="ignore"/>
    </service>
    <service id="security.firewall.map.context.test" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
            <tag name="monolog.logger" channel="security"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\AccessMap" public="false"/>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
                <argument>80</argument>
                <argument>443</argument>
              </service>
            </argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
            <argument type="service" id="security.context"/>
            <argument type="collection">
              <argument type="service" id="test_user_provider"/>
            </argument>
            <argument>test</argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="event_dispatcher" on-invalid="null"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" public="false">
            <argument type="service" id="security.context"/>
            <argument type="service" id="security.authentication.manager"/>
            <argument>test</argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" public="false">
                <argument>Secured Area</argument>
              </service>
            </argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
            <tag name="monolog.logger" channel="security"/>
            <argument type="service" id="security.context"/>
            <argument type="service" id="security.access.decision_manager"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\AccessMap" public="false"/>
            </argument>
            <argument type="service" id="security.authentication.manager"/>
          </service>
        </argument>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
          <argument type="service" id="security.context"/>
          <argument type="service" id="security.authentication.trust_resolver"/>
          <argument type="service">
            <service class="Symfony\Component\Security\Http\HttpUtils" public="false">
              <argument type="service" id="router" on-invalid="null"/>
              <argument type="service" id="router" on-invalid="null"/>
            </service>
          </argument>
          <argument>test</argument>
          <argument type="service">
            <service class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" public="false">
              <argument>Secured Area</argument>
            </service>
          </argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument type="service" id="monolog.logger.security" on-invalid="null"/>
        </service>
      </argument>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument type="collection"/>
    </service>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="default">doctrine.dbal.default_connection</argument>
      </argument>
      <argument type="collection">
        <argument key="default">doctrine.orm.default_entity_manager</argument>
      </argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.dbal.default_connection" class="stdClass" factory-method="createConnection" factory-service="doctrine.dbal.connection_factory">
      <argument type="collection">
        <argument key="dbname">sulu_test</argument>
        <argument key="host">localhost</argument>
        <argument key="user">root</argument>
        <argument key="password">null</argument>
        <argument key="port">null</argument>
        <argument key="driver">pdo_mysql</argument>
        <argument key="driverOptions" type="collection"/>
      </argument>
      <argument type="service">
        <service class="Doctrine\DBAL\Configuration" public="false">
          <call method="setSQLLogger">
            <argument type="service">
              <service class="Doctrine\DBAL\Logging\LoggerChain" public="false">
                <call method="addLogger">
                  <argument type="service">
                    <service class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
                      <tag name="monolog.logger" channel="doctrine"/>
                      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
                      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
                    </service>
                  </argument>
                </call>
                <call method="addLogger">
                  <argument type="service">
                    <service class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
                  </argument>
                </call>
              </service>
            </argument>
          </call>
        </service>
      </argument>
      <argument type="service">
        <service class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
          <argument type="service" id="service_container"/>
          <call method="addEventListener">
            <argument type="collection">
              <argument>loadClassMetadata</argument>
            </argument>
            <argument type="service">
              <service class="Doctrine\ORM\Tools\ResolveTargetEntityListener" public="false">
                <tag name="doctrine.event_listener" event="loadClassMetadata"/>
                <call method="addResolveTargetEntity">
                  <argument>Sulu\Component\Security\UserInterface</argument>
                  <argument>Sulu\Bundle\SecurityBundle\Entity\User</argument>
                  <argument type="collection"/>
                </call>
              </service>
            </argument>
          </call>
        </service>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" factory-method="create">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service">
        <service class="Doctrine\ORM\Configuration" public="false">
          <call method="setEntityNamespaces">
            <argument type="collection">
              <argument key="SuluContentBundle">Sulu\Bundle\ContentBundle\Entity</argument>
              <argument key="SuluContactBundle">Sulu\Bundle\ContactBundle\Entity</argument>
              <argument key="SuluSecurityBundle">Sulu\Bundle\SecurityBundle\Entity</argument>
            </argument>
          </call>
          <call method="setMetadataCacheImpl">
            <argument type="service">
              <service class="Doctrine\Common\Cache\ArrayCache" public="false">
                <call method="setNamespace">
                  <argument>sf2orm_default_300b31a5dcc2ffaefaba49bc1a5a492b</argument>
                </call>
              </service>
            </argument>
          </call>
          <call method="setQueryCacheImpl">
            <argument type="service">
              <service class="Doctrine\Common\Cache\ArrayCache" public="false">
                <call method="setNamespace">
                  <argument>sf2orm_default_300b31a5dcc2ffaefaba49bc1a5a492b</argument>
                </call>
              </service>
            </argument>
          </call>
          <call method="setResultCacheImpl">
            <argument type="service">
              <service class="Doctrine\Common\Cache\ArrayCache" public="false">
                <call method="setNamespace">
                  <argument>sf2orm_default_300b31a5dcc2ffaefaba49bc1a5a492b</argument>
                </call>
              </service>
            </argument>
          </call>
          <call method="setMetadataDriverImpl">
            <argument type="service">
              <service class="Doctrine\ORM\Mapping\Driver\DriverChain" public="false">
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                      <argument type="service" id="annotation_reader"/>
                      <argument type="collection">
                        <argument>/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Entity</argument>
                      </argument>
                    </service>
                  </argument>
                  <argument>Sulu\Bundle\ContentBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/sulu/contact-bundle/Sulu/Bundle/ContactBundle/Resources/config/doctrine">Sulu\Bundle\ContactBundle\Entity</argument>
                        <argument key="/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/sulu/security-bundle/Sulu/Bundle/SecurityBundle/Resources/config/doctrine">Sulu\Bundle\SecurityBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Sulu\Bundle\ContactBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/sulu/contact-bundle/Sulu/Bundle/ContactBundle/Resources/config/doctrine">Sulu\Bundle\ContactBundle\Entity</argument>
                        <argument key="/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/sulu/security-bundle/Sulu/Bundle/SecurityBundle/Resources/config/doctrine">Sulu\Bundle\SecurityBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Sulu\Bundle\SecurityBundle\Entity</argument>
                </call>
              </service>
            </argument>
          </call>
          <call method="setProxyDir">
            <argument>/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/cache/test/doctrine/orm/Proxies</argument>
          </call>
          <call method="setProxyNamespace">
            <argument>Proxies</argument>
          </call>
          <call method="setAutoGenerateProxyClasses">
            <argument>true</argument>
          </call>
          <call method="setClassMetadataFactoryName">
            <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
          </call>
          <call method="setDefaultRepositoryClassName">
            <argument>Doctrine\ORM\EntityRepository</argument>
          </call>
          <call method="setNamingStrategy">
            <argument type="service">
              <service class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
            </argument>
          </call>
        </service>
      </argument>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="jms_serializer.doctrine_proxy_subscriber" class="JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber">
      <tag name="jms_serializer.event_subscriber"/>
    </service>
    <service id="jms_serializer.stopwatch_subscriber" class="JMS\SerializerBundle\Serializer\StopwatchEventSubscriber">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="jms_serializer.handler_registry" class="JMS\Serializer\Handler\LazyHandlerRegistry">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="2" type="collection">
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromxml</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromyml</argument>
            </argument>
          </argument>
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Sequence" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Map" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
          </argument>
        </argument>
        <argument key="1" type="collection">
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
          </argument>
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Sequence" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Map" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\Form" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\FormError" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolationList" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolation" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToyml</argument>
            </argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="jms_serializer.datetime_handler" class="JMS\Serializer\Handler\DateHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>Y-m-d\TH:i:sO</argument>
      <argument>Europe/Zurich</argument>
    </service>
    <service id="jms_serializer.array_collection_handler" class="JMS\Serializer\Handler\ArrayCollectionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.php_collection_handler" class="JMS\Serializer\Handler\PhpCollectionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.form_error_handler" class="JMS\Serializer\Handler\FormErrorHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="jms_serializer.constraint_violation_handler" class="JMS\Serializer\Handler\ConstraintViolationHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.unserialize_object_constructor" class="JMS\Serializer\Construction\UnserializeObjectConstructor" public="false"/>
    <service id="jms_serializer.templating.helper.serializer" class="JMS\SerializerBundle\Templating\SerializerHelper">
      <tag name="templating.helper" alias="jms_serializer"/>
      <argument type="service" id="jms_serializer"/>
    </service>
    <service id="jms_serializer.json_serialization_visitor" class="JMS\Serializer\JsonSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="json"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <call method="setOptions">
        <argument>0</argument>
      </call>
    </service>
    <service id="jms_serializer.json_deserialization_visitor" class="JMS\Serializer\JsonDeserializationVisitor">
      <tag name="jms_serializer.deserialization_visitor" format="json"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
    </service>
    <service id="jms_serializer.xml_serialization_visitor" class="JMS\Serializer\XmlSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="xml"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
    </service>
    <service id="jms_serializer.xml_deserialization_visitor" class="JMS\Serializer\XmlDeserializationVisitor">
      <tag name="jms_serializer.deserialization_visitor" format="xml"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <call method="setDoctypeWhitelist">
        <argument type="collection"/>
      </call>
    </service>
    <service id="jms_serializer.yaml_serialization_visitor" class="JMS\Serializer\YamlSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="yml"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
    </service>
    <service id="fos_rest.view.exception_wrapper_handler" class="FOS\RestBundle\View\ExceptionWrapperHandler"/>
    <service id="fos_rest.routing.loader.controller" class="FOS\RestBundle\Routing\Loader\RestRouteLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="fos_rest.routing.loader.reader.controller"/>
      <argument>json</argument>
    </service>
    <service id="fos_rest.routing.loader.processor" class="FOS\RestBundle\Routing\Loader\RestRouteProcessor"/>
    <service id="fos_rest.routing.loader.yaml_collection" class="FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="fos_rest.routing.loader.processor"/>
    </service>
    <service id="fos_rest.routing.loader.xml_collection" class="FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="fos_rest.routing.loader.processor"/>
    </service>
    <service id="fos_rest.routing.loader.reader.controller" class="FOS\RestBundle\Routing\Loader\Reader\RestControllerReader">
      <argument type="service" id="fos_rest.routing.loader.reader.action"/>
      <argument type="service" id="annotation_reader"/>
    </service>
    <service id="fos_rest.routing.loader.reader.action" class="FOS\RestBundle\Routing\Loader\Reader\RestActionReader">
      <argument type="service" id="annotation_reader"/>
      <argument type="service" id="fos_rest.request.param_fetcher.reader"/>
      <argument type="service" id="fos_rest.inflector.doctrine"/>
      <argument>true</argument>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="xml">false</argument>
        <argument key="html">true</argument>
      </argument>
    </service>
    <service id="fos_rest.format_negotiator" class="FOS\RestBundle\Util\FormatNegotiator"/>
    <service id="fos_rest.inflector.doctrine" class="FOS\RestBundle\Util\Inflector\DoctrineInflector"/>
    <service id="fos_rest.request.param_fetcher" class="FOS\RestBundle\Request\ParamFetcher" scope="request">
      <argument type="service" id="fos_rest.request.param_fetcher.reader"/>
      <argument type="service" id="request"/>
    </service>
    <service id="fos_rest.request.param_fetcher.reader" class="FOS\RestBundle\Request\ParamReader">
      <argument type="service" id="annotation_reader"/>
    </service>
    <service id="fos_rest.decoder.json" class="FOS\RestBundle\Decoder\JsonDecoder"/>
    <service id="fos_rest.decoder.jsontoform" class="FOS\RestBundle\Decoder\JsonToFormDecoder"/>
    <service id="fos_rest.decoder.xml" class="FOS\RestBundle\Decoder\XmlDecoder"/>
    <service id="fos_rest.decoder_provider" class="FOS\RestBundle\Decoder\ContainerDecoderProvider">
      <argument type="collection">
        <argument key="json">fos_rest.decoder.json</argument>
        <argument key="xml">fos_rest.decoder.xml</argument>
      </argument>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="fos_rest.body_listener" class="FOS\RestBundle\EventListener\BodyListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <argument type="service" id="fos_rest.decoder_provider"/>
    </service>
    <service id="sulu.content.mapper" class="Sulu\Component\Content\Mapper\ContentMapper">
      <argument>/cmf/contents</argument>
      <argument>/cmf/routes</argument>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="sulu.content.structure_manager" class="Sulu\Component\Content\StructureManager">
      <argument type="service">
        <service class="Sulu\Component\Content\Template\TemplateReader" public="false"/>
      </argument>
      <argument type="collection">
        <argument key="template_dir">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/../Datafixtures/Template</argument>
        <argument key="cache_dir">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/cache/test</argument>
        <argument key="debug">true</argument>
      </argument>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="sulu.content.rlp.strategy.tree" class="Sulu\Component\Content\Types\Rlp\Strategy\TreeStrategy">
      <argument type="service">
        <service class="Sulu\Component\Content\Types\Rlp\Mapper\PhpcrMapper" public="false">
          <argument type="service" id="sulu.phpcr.session"/>
          <argument>/cmf/routes</argument>
        </service>
      </argument>
    </service>
    <service id="sulu.content.type.text_line" class="Sulu\Component\Content\Types\TextLine">
      <argument>SuluContentBundle:Template:content-types/text_line.html.twig</argument>
    </service>
    <service id="sulu.content.type.text_area" class="Sulu\Component\Content\Types\TextLine">
      <argument>SuluContentBundle:Template:content-types/text_area.html.twig</argument>
    </service>
    <service id="sulu.content.type.resource_locator" class="Sulu\Component\Content\Types\ResourceLocator">
      <argument type="service" id="sulu.content.rlp.strategy.tree"/>
      <argument>SuluContentBundle:Template:content-types/resource_locator.html.twig</argument>
      <argument>/cmf/routes</argument>
    </service>
    <service id="sulu_core.portal.loader.xml" class="Sulu\Component\Portal\Loader\XmlFileLoader">
      <argument type="service" id="file_locator"/>
    </service>
    <service id="sulu_core.portal.portal_manager" class="Sulu\Component\Portal\PortalManager">
      <argument type="service" id="sulu_core.portal.loader.xml"/>
      <argument type="service" id="logger"/>
      <argument type="collection">
        <argument key="config_dir">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/../Resources/portals</argument>
        <argument key="cache_dir">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/cache/test</argument>
        <argument key="debug">true</argument>
        <argument key="cache_class">PortalCollectionCache</argument>
        <argument key="base_class">PortalCollection</argument>
      </argument>
    </service>
    <service id="sulu_core.portal.portal_listener" class="Sulu\Bundle\CoreBundle\EventListener\PortalListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="300"/>
      <argument type="service" id="sulu_core.portal.portal_manager"/>
    </service>
    <service id="sulu.phpcr.session" class="Sulu\Component\PHPCR\SessionFactory\SessionFactoryService">
      <argument type="service">
        <service class="Jackalope\RepositoryFactoryJackrabbit" public="false"/>
      </argument>
      <argument type="collection">
        <argument key="url">http://localhost:8080/server</argument>
        <argument key="username">admin</argument>
        <argument key="password">admin</argument>
        <argument key="workspace">default</argument>
      </argument>
    </service>
    <service id="sulu_core.list_rest_helper" class="Sulu\Component\Rest\Listing\ListRestHelper" scope="request">
      <argument type="service" id="request"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="sulu_content.admin" class="Sulu\Bundle\ContentBundle\Admin\SuluContentAdmin">
      <tag name="sulu.admin"/>
    </service>
    <service id="sulu_content.admin.content_navigation" class="Sulu\Bundle\ContentBundle\Admin\SuluContentContentNavigation"/>
    <service id="sulu_content.twig_extension" class="Sulu\Bundle\ContentBundle\Twig\ContentExtension">
      <tag name="twig.extension"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="sulu_contact.admin" class="Sulu\Bundle\ContactBundle\Admin\SuluContactAdmin">
      <tag name="sulu.admin"/>
    </service>
    <service id="sulu_contact.admin.content_navigation" class="Sulu\Bundle\ContactBundle\Admin\SuluContactContentNavigation">
      <call method="addNavigation">
        <argument type="service">
          <service class="Sulu\Bundle\SecurityBundle\Admin\SuluSecurityContentNavigation">
            <tag name="sulu.contact.admin.content_navigation"/>
          </service>
        </argument>
      </call>
    </service>
    <service id="sulu_security.admin" class="Sulu\Bundle\SecurityBundle\Admin\SuluSecurityAdmin">
      <tag name="sulu.admin"/>
    </service>
    <service id="sulu_security.mask_converter" class="Sulu\Bundle\SecurityBundle\Permission\MaskConverter">
      <argument type="collection">
        <argument key="view">64</argument>
        <argument key="add">32</argument>
        <argument key="edit">16</argument>
        <argument key="delete">8</argument>
        <argument key="archive">4</argument>
        <argument key="live">2</argument>
        <argument key="security">1</argument>
      </argument>
    </service>
    <service id="sulu_security.salt_generator" class="Sulu\Bundle\SecurityBundle\Permission\SaltGenerator"/>
    <service id="sulu_security.content_navigation" class="Sulu\Bundle\SecurityBundle\Admin\SuluSecurityContentNavigation">
      <tag name="sulu.contact.admin.content_navigation"/>
    </service>
    <service id="sulu_security.admin.roles_navigation" class="Sulu\Bundle\SecurityBundle\Admin\SuluSecurityRolesContentNavigation"/>
    <service id="user.services.user_data" class="Sulu\Bundle\SecurityBundle\Services\UserDataHandler">
      <argument type="service" id="security.context"/>
      <argument type="service" id="router"/>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.emergency" class="Symfony\Bridge\Monolog\Logger">
      <argument>emergency</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.deprecation" class="Symfony\Bridge\Monolog\Logger">
      <argument>deprecation</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.templating" class="Symfony\Bridge\Monolog\Logger">
      <argument>templating</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="session.storage.filesystem" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage">
      <argument>/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/cache/test/sessions</argument>
    </service>
    <service id="session.handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler">
      <argument>/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/cache/test/sessions</argument>
    </service>
    <service id="templating.loader" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader">
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="debug.templating.engine.php" class="Symfony\Bundle\FrameworkBundle\Templating\TimedPhpEngine">
      <argument type="service" id="templating.name_parser"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="templating.loader"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="templating.globals"/>
      <call method="setHelpers">
        <argument type="collection">
          <argument key="slots">templating.helper.slots</argument>
          <argument key="assets">templating.helper.assets</argument>
          <argument key="request">templating.helper.request</argument>
          <argument key="session">templating.helper.session</argument>
          <argument key="router">templating.helper.router</argument>
          <argument key="actions">templating.helper.actions</argument>
          <argument key="code">templating.helper.code</argument>
          <argument key="translator">templating.helper.translator</argument>
          <argument key="form">templating.helper.form</argument>
          <argument key="logout_url">templating.helper.logout_url</argument>
          <argument key="security">templating.helper.security</argument>
          <argument key="jms_serializer">jms_serializer.templating.helper.serializer</argument>
        </argument>
      </call>
    </service>
    <service id="templating" class="Symfony\Bundle\TwigBundle\Debug\TimedTwigEngine">
      <argument type="service" id="twig"/>
      <argument type="service" id="templating.name_parser"/>
      <argument type="service" id="templating.locator"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="templating.globals"/>
      <call method="setDefaultEscapingStrategy">
        <argument type="collection">
          <argument type="service" id="templating"/>
          <argument>guessDefaultEscapingStrategy</argument>
        </argument>
      </call>
    </service>
    <service id="router" class="Symfony\Bundle\FrameworkBundle\Routing\Router">
      <tag name="monolog.logger" channel="router"/>
      <argument type="service" id="service_container"/>
      <argument>/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/config/routing.yml</argument>
      <argument type="collection">
        <argument key="cache_dir">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/cache/test</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</argument>
        <argument key="generator_cache_class">adminTestUrlGenerator</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</argument>
        <argument key="matcher_cache_class">adminTestUrlMatcher</argument>
        <argument key="strict_requirements">true</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
    </service>
    <service id="annotation_reader" class="Doctrine\Common\Annotations\FileCacheReader">
      <argument type="service">
        <service class="Doctrine\Common\Annotations\AnnotationReader" public="false"/>
      </argument>
      <argument>/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/cache/test/annotations</argument>
      <argument>true</argument>
    </service>
    <service id="twig.loader" class="Symfony\Bundle\TwigBundle\Loader\FilesystemLoader">
      <tag name="twig.loader"/>
      <argument type="service" id="templating.locator"/>
      <argument type="service" id="templating.name_parser"/>
      <call method="addPath">
        <argument>/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/doctrine/doctrine-bundle/Doctrine/Bundle/DoctrineBundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Resources/views</argument>
        <argument>SuluContent</argument>
      </call>
      <call method="addPath">
        <argument>/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/sulu/contact-bundle/Sulu/Bundle/ContactBundle/Resources/views</argument>
        <argument>SuluContact</argument>
      </call>
      <call method="addPath">
        <argument>/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/sulu/security-bundle/Sulu/Bundle/SecurityBundle/Resources/views</argument>
        <argument>SuluSecurity</argument>
      </call>
    </service>
    <service id="logger" class="Symfony\Bridge\Monolog\Logger">
      <argument>app</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="security.encoder_factory" class="Symfony\Component\Security\Core\Encoder\EncoderFactory">
      <argument type="collection">
        <argument key="Sulu\Component\Testing\TestUser" type="collection">
          <argument key="class">%security.encoder.plain.class%</argument>
          <argument key="arguments" type="collection">
            <argument>false</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="jms_serializer.metadata_driver" class="JMS\Serializer\Metadata\Driver\DoctrineTypeDriver">
      <argument type="service">
        <service class="Metadata\Driver\DriverChain" public="false">
          <argument type="collection">
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\YamlDriver" public="false">
                <argument type="service">
                  <service class="Metadata\Driver\FileLocator" public="false">
                    <argument type="collection">
                      <argument key="Symfony\Bundle\FrameworkBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\TwigBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\MonologBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/symfony/monolog-bundle/Symfony/Bundle/MonologBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SecurityBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/doctrine/doctrine-bundle/Doctrine/Bundle/DoctrineBundle/Resources/config/serializer</argument>
                      <argument key="JMS\SerializerBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/jms/serializer-bundle/JMS/SerializerBundle/Resources/config/serializer</argument>
                      <argument key="FOS\RestBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/friendsofsymfony/rest-bundle/FOS/RestBundle/Resources/config/serializer</argument>
                      <argument key="Sulu\Bundle\CoreBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/sulu/sulu/src/Sulu/Bundle/CoreBundle/Resources/config/serializer</argument>
                      <argument key="Sulu\Bundle\ContentBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Resources/config/serializer</argument>
                      <argument key="Sulu\Bundle\ContactBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/sulu/contact-bundle/Sulu/Bundle/ContactBundle/Resources/config/serializer</argument>
                      <argument key="Sulu\Bundle\SecurityBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/sulu/security-bundle/Sulu/Bundle/SecurityBundle/Resources/config/serializer</argument>
                    </argument>
                  </service>
                </argument>
              </service>
            </argument>
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\XmlDriver" public="false">
                <argument type="service">
                  <service class="Metadata\Driver\FileLocator" public="false">
                    <argument type="collection">
                      <argument key="Symfony\Bundle\FrameworkBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\TwigBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\MonologBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/symfony/monolog-bundle/Symfony/Bundle/MonologBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SecurityBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/doctrine/doctrine-bundle/Doctrine/Bundle/DoctrineBundle/Resources/config/serializer</argument>
                      <argument key="JMS\SerializerBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/jms/serializer-bundle/JMS/SerializerBundle/Resources/config/serializer</argument>
                      <argument key="FOS\RestBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/friendsofsymfony/rest-bundle/FOS/RestBundle/Resources/config/serializer</argument>
                      <argument key="Sulu\Bundle\CoreBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/sulu/sulu/src/Sulu/Bundle/CoreBundle/Resources/config/serializer</argument>
                      <argument key="Sulu\Bundle\ContentBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Resources/config/serializer</argument>
                      <argument key="Sulu\Bundle\ContactBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/sulu/contact-bundle/Sulu/Bundle/ContactBundle/Resources/config/serializer</argument>
                      <argument key="Sulu\Bundle\SecurityBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/sulu/security-bundle/Sulu/Bundle/SecurityBundle/Resources/config/serializer</argument>
                    </argument>
                  </service>
                </argument>
              </service>
            </argument>
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\PhpDriver" public="false">
                <argument type="service">
                  <service class="Metadata\Driver\FileLocator" public="false">
                    <argument type="collection">
                      <argument key="Symfony\Bundle\FrameworkBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\TwigBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\MonologBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/symfony/monolog-bundle/Symfony/Bundle/MonologBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SecurityBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/doctrine/doctrine-bundle/Doctrine/Bundle/DoctrineBundle/Resources/config/serializer</argument>
                      <argument key="JMS\SerializerBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/jms/serializer-bundle/JMS/SerializerBundle/Resources/config/serializer</argument>
                      <argument key="FOS\RestBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/friendsofsymfony/rest-bundle/FOS/RestBundle/Resources/config/serializer</argument>
                      <argument key="Sulu\Bundle\CoreBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/sulu/sulu/src/Sulu/Bundle/CoreBundle/Resources/config/serializer</argument>
                      <argument key="Sulu\Bundle\ContentBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Resources/config/serializer</argument>
                      <argument key="Sulu\Bundle\ContactBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/sulu/contact-bundle/Sulu/Bundle/ContactBundle/Resources/config/serializer</argument>
                      <argument key="Sulu\Bundle\SecurityBundle">/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/vendor/sulu/security-bundle/Sulu/Bundle/SecurityBundle/Resources/config/serializer</argument>
                    </argument>
                  </service>
                </argument>
              </service>
            </argument>
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\AnnotationDriver" public="false">
                <argument type="service" id="annotation_reader"/>
              </service>
            </argument>
          </argument>
        </service>
      </argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="jms_serializer.naming_strategy" class="JMS\Serializer\Naming\CacheNamingStrategy">
      <argument type="service">
        <service class="JMS\Serializer\Naming\SerializedNameAnnotationStrategy" public="false">
          <argument type="service">
            <service class="JMS\Serializer\Naming\CamelCaseNamingStrategy" public="false">
              <argument>_</argument>
              <argument>true</argument>
            </service>
          </argument>
        </service>
      </argument>
    </service>
    <service id="jms_serializer" class="JMS\Serializer\Serializer">
      <argument type="service">
        <service class="Metadata\MetadataFactory" public="false">
          <argument type="service">
            <service class="Metadata\Driver\LazyLoadingDriver" public="false">
              <argument type="service" id="service_container"/>
              <argument>jms_serializer.metadata_driver</argument>
            </service>
          </argument>
          <argument>Metadata\ClassHierarchyMetadata</argument>
          <argument>true</argument>
          <call method="setCache">
            <argument type="service">
              <service class="Metadata\Cache\FileCache" public="false">
                <argument>/Users/johannes/workspace/sulu/vendor/sulu/content-bundle/Sulu/Bundle/ContentBundle/Tests/Resources/app/admin/cache/test/jms_serializer</argument>
              </service>
            </argument>
          </call>
        </service>
      </argument>
      <argument type="service" id="jms_serializer.handler_registry"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="service">
        <service class="PhpCollection\Map">
          <argument type="collection">
            <argument key="json" type="service" id="jms_serializer.json_serialization_visitor"/>
            <argument key="xml" type="service" id="jms_serializer.xml_serialization_visitor"/>
            <argument key="yml" type="service" id="jms_serializer.yaml_serialization_visitor"/>
          </argument>
        </service>
      </argument>
      <argument type="service">
        <service class="PhpCollection\Map">
          <argument type="collection">
            <argument key="json" type="service" id="jms_serializer.json_deserialization_visitor"/>
            <argument key="xml" type="service" id="jms_serializer.xml_deserialization_visitor"/>
          </argument>
        </service>
      </argument>
      <argument type="service">
        <service class="JMS\Serializer\EventDispatcher\LazyEventDispatcher" public="false">
          <argument type="service" id="service_container"/>
          <call method="setListeners">
            <argument type="collection">
              <argument key="serializer.pre_serialize" type="collection">
                <argument type="collection">
                  <argument type="collection">
                    <argument>jms_serializer.stopwatch_subscriber</argument>
                    <argument>onPreSerialize</argument>
                  </argument>
                  <argument>null</argument>
                  <argument>null</argument>
                </argument>
                <argument type="collection">
                  <argument type="collection">
                    <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                    <argument>onPreSerialize</argument>
                  </argument>
                  <argument>null</argument>
                  <argument>null</argument>
                </argument>
              </argument>
              <argument key="serializer.post_serialize" type="collection">
                <argument type="collection">
                  <argument type="collection">
                    <argument>jms_serializer.stopwatch_subscriber</argument>
                    <argument>onPostSerialize</argument>
                  </argument>
                  <argument>null</argument>
                  <argument>null</argument>
                </argument>
              </argument>
            </argument>
          </call>
        </service>
      </argument>
    </service>
    <service id="fos_rest.view_handler" class="FOS\RestBundle\View\ViewHandler">
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="xml">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>400</argument>
      <argument>204</argument>
      <argument>false</argument>
      <argument type="collection">
        <argument key="html">302</argument>
      </argument>
      <argument>twig</argument>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="session.storage" alias="session.storage.filesystem"/>
    <service id="debug.templating.engine.twig" alias="templating"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager"/>
    <service id="serializer" alias="jms_serializer"/>
    <service id="fos_rest.router" alias="router"/>
    <service id="fos_rest.templating" alias="templating"/>
    <service id="fos_rest.serializer" alias="jms_serializer"/>
    <service id="fos_rest.inflector" alias="fos_rest.inflector.doctrine"/>
  </services>
</container>
